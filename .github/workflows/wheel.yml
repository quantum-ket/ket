# SPDX-FileCopyrightText: 2020 Evandro Chagas Ribeiro da Rosa <evandro@quantuloop.com>
# SPDX-FileCopyrightText: 2020 Rafael de Santiago <r.santiago@ufsc.br>
#
# SPDX-License-Identifier: Apache-2.0

name: Wheel

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  Windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Checkout Submodules
        run: git submodule update --init --recursive
      - name: Compile Rust Libs
        run: |
          rustup default 1.82
          cargo build --release --manifest-path src\ket\clib\libs\libket\Cargo.toml
          cargo build --release --manifest-path src\ket\clib\libs\kbw\Cargo.toml
          cp src\ket\clib\libs\libket\target\release\ket.dll src\ket\clib\libs\ket.dll
          cp src\ket\clib\libs\kbw\target\release\kbw.dll src\ket\clib\libs\kbw.dll
      - name: Install Python Dependencies
        run: py -m pip install setuptools wheel twine
      - name: Build Wheel
        run: py setup.py bdist_wheel -p win-amd64
      - name: Archive Wheel
        uses: actions/upload-artifact@v3
        with:
          name: win
          path: dist
      - name: Upload to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: py -m twine upload dist/*

  macOS:
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v3
      - name: Checkout Submodules
        run: git submodule update --init --recursive
      - name: Compile Rust Libs
        run: |
          rustup default 1.82
          cargo build --release --manifest-path src/ket/clib/libs/libket/Cargo.toml
          cargo build --release --manifest-path src/ket/clib/libs/kbw/Cargo.toml
          mv src/ket/clib/libs/libket/target/release/libket.dylib src/ket/clib/libs/kbw/target/release/libkbw.dylib src/ket/clib/libs/
          rm -rf src/ket/clib/libs/libket/ src/ket/clib/libs/kbw/
      - name: Install Python Dependencies
        run: python3 -m pip install setuptools wheel twine
      - name: Build Wheel
        run: python3 setup.py bdist_wheel -p macosx_10_7_x86_64
      - name: Archive Wheel
        uses: actions/upload-artifact@v3
        with:
          name: macosx
          path: dist
      - name: Upload to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: python3 -m twine upload dist/*
